/**
 * https://github.com/srexi/purecounterjs
 */
!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/",n(n.s=0)}([function(e,t,n){e.exports=n(1)},function(e,t){function n(){var e=document.querySelectorAll(".purecounter");if("IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&"intersectionRatio"in window.IntersectionObserverEntry.prototype)for(var t=new IntersectionObserver(o,{root:null,rootMargin:"20px",threshold:.5}),n=0;n<e.length;n++)t.observe(e[n]);else window.addEventListener&&(r(e),window.addEventListener("scroll",function(t){r(e)},{passive:!0}))}function r(e){for(var t=0;t<e.length;t++){!0===a(e[t]).legacy&&u(e[t])&&o([e[t]])}}function o(e,t){e.forEach(function(e){var n=void 0!==e.target?a(e.target):a(e);return n.duration<=0?e.innerHTML=n.end.toFixed(n.decimals):!t&&!u(e)||t&&e.intersectionRatio<.5?e.target.innerHTML=n.start>n.end?n.end:n.start:void setTimeout(function(){return void 0!==e.target?i(e.target,n):i(e,n)},n.delay)})}function i(e,t){var n=(t.end-t.start)/(t.duration/t.delay),r="inc";t.start>t.end&&(r="dec",n*=-1),n<1&&t.decimals<=0&&(n=1);var o=t.decimals<=0?parseInt(t.start):parseFloat(t.start).toFixed(t.decimals);e.innerHTML=o,!0===t.once&age: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23212529'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\");\n  background-repeat: no-repeat;\n  background-size: 1.25rem;\n  transition: transform 0.2s ease-in-out;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .accordion-button::after {\n    transition: none;\n  }\n}\n\n.accordion-button:hover {\n  z-index: 2;\n}\n\n.accordion-button:focus {\n  z-index: 3;\n  border-color: #fbf0af;\n  outline: 0;\n  box-shadow: 0 0 0 0.25rem rgba(246, 224, 94, 0.25);\n}\n\n.accordion-header {\n  margin-bottom: 0;\n}\n\n.accordion-item {\n  background-color: #fff;\n  border: 2px solid rgba(0, 0, 0, 0.125);\n}\n\n.accordion-item:first-of-type {\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n}\n\n.accordion-item:first-of-type .accordion-button {\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n}\n\n.accordion-item:not(:first-of-type) {\n  border-top: 0;\n}\n\n.accordion-item:last-of-type {\n  border-bottom-right-radius: 10px;\n  border-bottom-left-radius: 10px;\n}\n\n.accordion-item:last-of-type .accordion-button.collapsed {\n  border-bottom-right-radius: 8px;\n  border-bottom-l